server:
  port: 1007
  servlet:
    context-path: /gw
spring:
  application:
    name: commerce-gateway
  cloud:
    nacos:
      discovery:
        server-addr: centos007:1002
        namespace: 468ff251-10b0-44f3-9bdf-b098ee07bf02
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
    #    gateway:
    #      routes: 
    #        - id: path_route #路由id
    #          uri: 127.0.01:8080/user/{id} #匹配后路由地址
    #          predicates: #断言
    #            - Path=/user/{id}
    # 版本问题 配置不起作用 Dashboard server address not configured or not available   暂时在运行时传参 
    #-Dcsp.sentinel.dashboard.server=centos007:1028
    #-Dproject.name=commerce-sentinel-client 应用的名称显示在dashboard中
    #-Dcsp.sentinel.heartbeat.client.ip=192.168.1.3 指定心跳包中本机的 IP
    #-Dcsp.sentinel.api.port=1033 客户端HttpServer端口
    sentinel:
      filter:
        enabled: false
      transport:
        #在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。
        #比如 Sentinel 控制台添加了一个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。
        port: 1033 #未指定默认使用8719++++
        dashboard: centos007:1028
        clientIp: 192.168.1.3
      eager: true
      #      datasource: #AbstractDataSourceProperties 
      #        ds1: #本地文件中读取 整体服务每分钟最多访问10次 其中部分api最多3次
      #          file:
      #            file: classpath:gateway-flow-rule-sentinel.json #对应SentinelGatewayConfig中的定义 如果定义分组还需要具体api定义 
      #            rule-type: gw-flow
      #        ds2:
      #          file:
      #            file: classpath:gateway-flow-rule-sentinel-api-def.json #具体api定义 
      #            rule-type: gw-api-group
      datasource: #AbstractDataSourceProperties
        ds1:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            data-id: gateway-flow-rule-sentinel
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw-flow #flow, degrade, authority, system, param-flow, gw-flow, gw-api-group
            username: nacos
            password: nacos
        ds2:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            namespace: ${spring.cloud.nacos.discovery.namespace}
            data-id: gateway-flow-rule-sentinel-api-def
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw-api-group
            username: nacos
            password: nacos
  main:
    allow-bean-definition-overriding: true #可能存在重名
#  kafka:
#    bootstrap-servers: centos007:1111
#    producer:
#      retries: 3
#    consumer:
#      auto-offset-reset: latest
#  zipkin:
#    sender:
#      type: kafka  #collector
#    base-url: http://centos007:1008
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
management:
  zipkin:
    tracing:
      connect-timeout: 5000
      read-timeout: 5000
      endpoint: http://centos007:1008/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
#这个地方独立配置 是网关的数据 代码GatewayConfig.java中读取监听
nacos:
  gateway:
    route:
      config:
        data-id: commerce-gateway-router
        group: commerce