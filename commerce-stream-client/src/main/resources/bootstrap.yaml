server:
  port: 1017
  servlet:
    context-path: /commerce-stream-client
spring:
  application:
    name: commerce-stream-client
  cloud:
    nacos:
      discovery:
        server-addr: centos007:1002
        namespace: 468ff251-10b0-44f3-9bdf-b098ee07bf02
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
    stream:
      function:
        #Multiple Kafka Streams processors within a single application.     
        #activate the functions.
        definition: autoProcess;manualProcess
        bindings:
          #i.e. <function-bean-name>-<in>|<out>-[0..n], for e.g. process-in-0, process-out-0 etc.
          #Overriding the default binding names generated by the binder with the functional style
          autoProcess-out-0: auto-output
          autoProcess-in-0: auto-input
          manualProcess-out-0: manual-output
          manualProcess-in-0: manual-input
      kafka:
        binder:
          # KafkaBinderConfigurationProperties
          brokers: centos007:1016
          autoCreateTopics: true
      bindings: #BindingServiceProperties
        #发送方
        auto-output: #BindingProperties
          destination: topic-auto-commerce-stream-client  # The physical name at the broker that the binder binds to. / topic name
          content-type: text/plain # Default: 'application/json'.
          producer: #ProducerProperties
            ## Used to extract a key used to compute the partition id
            # partition-key-expression: headers['partitionKey'] 被自定义策略覆盖
            ## Used to determine partition id based on partition key. uses the default partitioning (key.hashCode() % partitionCount).
            ## partition-selector-expression: 
            partition-count: 1
        #接收方1
        auto-input:
          #If you miss the group.id in your Spring Cloud Stream application, then it becomes an anonymous consumer.
          group: auto-group
          destination: topic-auto-commerce-stream-client
        # consumer: #ConsumerProperties
        #   partitioned: true
        manual-output:
          destination: topic-manual-commerce-stream-client
          content-type: text/plain
          producer:
            #partition-key-extractor-name: customPartitionKeyExtractorName # implements PartitionKeyExtractorStrategy # payload.projectName
            #partition-selector-name: customPartitionSelectorStrategy # implements  PartitionSelectorStrategy
            partition-count: 1
        manual-input:
          group: manual-group
          destination: topic-manual-commerce-stream-client
          #disable auto startup for this processor.
          consumer:
            auto-startup: false
      #rebalanced  requires 
      instance-count: 1
      instance-index: 0
management:
  zipkin:
    tracing:
      read-timeout: 5000
      connect-timeout: 5000
      endpoint: http://centos007:1008/api/v2/spans
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always