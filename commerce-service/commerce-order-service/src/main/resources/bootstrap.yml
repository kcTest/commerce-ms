server:
  port: 1025
  servlet:
    context-path: /commerce-order-service
spring:
  application:
    name: commerce-order-service
  cloud:
    nacos:
      discovery:
        server-addr: centos007:1002
        namespace: 468ff251-10b0-44f3-9bdf-b098ee07bf02
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator
    openfeign: #使用的项目配置，FeignConfig
      client:
        config:
          #feignName:default；    feignName refers to @FeignClient value 可以单独对某个远程服务调用客户端进行配置
          default: #If you prefer using configuration properties to configure all @FeignClient, you can create configuration properties with default feign name.
            connectTimeout: 2000
            readTimeout: 5000
            loggerlevel: BASIC
      circuitbreaker:
        enabled: true
      okhttp:
        enabled: true
      httpclient:
        enabled: false
    stream:
      function:
        definition: logistic
        bindings:
          logistic-out-0: logistic-output
      kafka:
        binder:
          brokers: centos007:1016
          autoCreateTopics: true
      bindings:
        logistic-output:
          destination: commerce-order-logistic
          content-type: text/plain
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate.show-sql: true
      hibernate.format_sql: true
    open-in-view: false
  datasource:
    url: jdbc:mysql://centos007:1006/commerce?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456xxx
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 8
      minimum-idle: 4
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 45000
      auto-commit: true
      pool-name: OrderServiceHikariCP
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://centos007:1008/api/v2/spans
      read-timeout: 5000
      connect-timeout: 5000
swagger:
  title: 订单服务
  description: 订单相关服务后台接口文档
seata:
  # nacos中已配置
  #  service: 
  #    vgroup-mapping:
  #      commerce_tx_group: default  #指定事务分组至集群映射关系（等号右侧的集群名需要与Seata-server注册到Nacos的cluster保持一致）
  tx-service-group: commerce_tx_group #事务分组配置（在v1.5之后默认值为default_tx_group）
  registry:
    type: nacos #使用nacos作为注册中心
    nacos:
      application: seata-server # Seata服务名（应与seata-server实际注册的服务名一致）
      server-addr: centos007:1002 #注册中心IP:端口
      namespace: aea013fb-ebc4-4e44-8476-fa0b2c67fc94
      group: SEATA_GROUP #  Seata分组名（应与seata-server实际注册的分组名一致）
      username: nacos
      password: nacos
      secret-key: SeataSecretKey0c382ef121d778043159209298fd40bf3850a017
      cluster: default
  config:
    type: nacos
    nacos:
      server-addr: centos007:1002
      namespace: aea013fb-ebc4-4e44-8476-fa0b2c67fc94
      group: SEATA_GROUP
      username: nacos
      password: nacos
      secret-key: SeataSecretKey0c382ef121d778043159209298fd40bf3850a017